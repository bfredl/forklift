func returner
  var %sum
  var %item
  var %ipos
  var %max
  %x = arg
  %len = arg
  %ipos := 0
  %max := 0
:maxloop
  %sum := 0
  jge %ipos %len :retvrn
:sumloop
  %item := 0
  jge %ipos %len :enda_sum
:check
  %prebyte = load byte [%x %ipos]
  %pretoken = sub %prebyte 48
  ja %pretoken 9 :enda_sum
:parseloop
  %byte = load byte [%x %ipos]
  %token = sub %byte 48
  ja %token 9 :enda
:doit
  %base = 10
  %adjust = mul %item %base
  %item := add %adjust %token
  %ipos := add %ipos 1
  jl %ipos %len :parseloop
:enda
  %sum := add %sum %item
  %ipos := add %ipos 1
  jmp :sumloop
:enda_sum
  %ipos := add %ipos 1
  jge %max %sum :maxloop
:
  %max := add %sum 0
  jmp :maxloop
:retvrn
  ret %max
end
